What happens when you initialize a repository? Why do you need to do it?

A .git folder for metadata is created and makes the folder ready for commits.  
The metadata is necessary to identify the folder as a git repository and to allow 
for version control.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

The staging area is not a directory as it does not actually hold files, it is a 
conceptual list of files that will be added to the repository with a commit.
The staging area allows someone to add and remove files before making a commit so
that everything can be in order and correct before the commit is done.

How can you use the staging area to make sure you have one commit per logical
change?

Just add the files relevant to the logical change to the staging area and commit
each logical change seperately.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

Brnaches are most helpful for major changes (experiments etc) where you still want
to maintain the original source in its own seperate branch.

How do the diagrams help you visualize the branch structure?

Branch structure can be complex with multiple branches and timelines for commits,
diagrams help visualize the path of commits from a certain branch and how and when
they deviated from the master or other branches.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

The result of merging 2 branches together is that changes from both brnaches are combined
into a single branch,  It is represented in a diagram as to branches coming together because
each branch still has their own parent going back to when the branch was created.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

Gits auto merging is helpful because it effortlessly merges branches when people are working
on different parts.  Auto merging does not working if say users modify the same function so
it requires collaboration to determine which merge is the best one.  The con is this may take
more time to resolve, the pro is that collaboration is almost always helpful and a learning
opportunity in these cases.
